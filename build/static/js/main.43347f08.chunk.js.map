{"version":3,"sources":["components/List.js","App.js","reportWebVitals.js","index.js"],"names":["List","props","useState","showEdit","setShowEdit","editedItem","setEditedItem","className","item","task","value","onChange","e","target","onClick","editItem","index","deleteItem","APP","setItem","itemList","setItemList","inputBorder","setInputBorder","newVal","idToEdit","_id","fetch","method","body","JSON","stringify","headers","then","res","data","idTodDelete","splice","useEffect","json","arr","sortedArr","sort","a","b","Date","creationTime","valueOf","onSubmit","preventDefault","trim","r","tempArr","push","console","log","placeholder","style","border","onBlur","marginBottom","map","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"oMA6BeA,EA5BJ,SAACC,GAAS,IAAD,EACaC,oBAAS,GADtB,mBACTC,EADS,KACAC,EADA,OAEiBF,mBAAS,IAF1B,mBAETG,EAFS,KAEEC,EAFF,KAIhB,OACI,mCACQ,sBAAuBC,UAAU,aAAjC,UAECN,EAAMO,KAAKC,KACXN,EACD,iCACA,uBAAOO,MAAOL,EAAYM,SAAU,SAACC,GAAD,OAAKN,EAAcM,EAAEC,OAAOH,UAChE,wBAAQI,QAAS,WAAKb,EAAMc,SAASd,EAAMe,MAAMX,GAAYD,GAAaD,IAA1E,kBACA,wBAAQW,QAAS,kBAAIV,GAAaD,IAAlC,uBAKA,iCACA,wBAAQW,QAAS,WAAKV,GAAaD,GAAUG,EAAcL,EAAMO,KAAKC,OAAtE,kBACA,wBAAQK,QAAS,kBAAIb,EAAMgB,WAAWhB,EAAMe,QAA5C,yBAdUf,EAAMe,UC+EjBE,EApFL,WAAK,IAAD,EAEOhB,mBAAS,IAFhB,mBAEPM,EAFO,KAEFW,EAFE,OAGejB,mBAAS,IAHxB,mBAGPkB,EAHO,KAGEC,EAHF,OAIqBnB,mBAAS,mBAJ9B,mBAIPoB,EAJO,KAIKC,EAJL,KAqBRR,EAAS,SAACC,EAAMQ,GAClB,IAAMC,EAASL,EAASJ,GAAOU,IAC/BC,MAAM,aAAD,OAAcF,GACf,CACIG,OAAO,MACPC,KAAKC,KAAKC,UAAU,CAACtB,KAAKe,IAC1BQ,QAAQ,CACJ,eAAe,sBAEpBC,MAAK,SAAAC,GAAM,IAAMC,EAAK,YAAIf,GACzBe,EAAKnB,GAAOP,KAAKe,EACjBH,EAAYc,OAGlBlB,EAAW,SAACD,GAEd,IAAMmB,EAAK,YAAKf,GACVgB,EAAYD,EAAKnB,GAAOU,IAE9BC,MAAM,eAAD,OAAgBS,GAAc,CACnCR,OAAO,WAAWK,MAAK,SAAAC,GAAMC,EAAKE,OAAOrB,EAAM,GAAGK,EAAY,YAAIc,QAqBlE,OAjBJG,qBAAU,WAENX,MAAM,YAAY,CACdC,OAAO,MACPI,QAAQ,CACJ,eAAe,mBACf,OAAU,sBAEfC,MAAK,SAAAE,GAAI,OAAEA,EAAKI,UAAQN,MAAK,SAACO,GAAQ,IAAMC,EAAYD,EAAIE,MAAK,SAACC,EAAGC,GAGpE,OAFqB,IAAIC,KAAKF,EAAEG,cAAcC,UACzB,IAAIF,KAAKD,EAAEE,cAAcC,aAGlD1B,EAAYoB,QAGd,IAEM,sBAAKlC,UAAU,MAAf,UACI,iCAAM,2CACV,uBAAMyC,SA3DA,SAACpC,GACXA,EAAEqC,iBACe,KAAdzC,EAAK0C,QAEJ3B,EAAe,mBACfI,MAAM,WAAW,CACbC,OAAO,OACPC,KAAKC,KAAKC,UAAU,CAACtB,KAAKD,IAC1BwB,QAAQ,CAAC,eAAe,sBACzBC,MAAK,SAAAkB,GAAC,OAAEA,EAAEZ,UAAQN,MAAK,SAAAC,GAAM,IAAMkB,EAAQ,YAAIhC,GAAUgC,EAAQC,KAAKnB,GAAKoB,QAAQC,IAAIrB,GAAKb,EAAY,YAAI+B,IAAUjC,EAAQ,QAGjII,EAAe,kBA+Cf,UACA,uBAAOiC,YAAY,gBAAgB9C,MAAOF,EAAMG,SAAU,SAACC,GAAD,OAAKO,EAAQP,EAAEC,OAAOH,QAAQ+C,MAAO,CAACC,OAAOpC,GAAcqC,OAAQ,kBAAIpC,EAAe,sBAChJ,wBAAQkC,MAAO,CAACG,aAAc,QAA9B,iBAGIxC,EAASyC,KAAI,SAACrD,EAAKQ,GAAN,OACf,cAAC,EAAD,CAAMI,SAAUA,EAAUZ,KAAMA,EAAMQ,MAAOA,EAAOD,SAAUA,EAAUE,WAAYA,aAMtF,mECnEO6C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/B,MAAK,YAAkD,IAA/CgC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.43347f08.chunk.js","sourcesContent":["import React,{useState} from 'react';\nconst List=(props)=>{\n    const [showEdit,setShowEdit]=useState(false);\n    const [editedItem,setEditedItem]=useState('');\n   \n    return(\n        <>\n                <div key={props.index} className='list-items'>\n                \n                {props.item.task}\n                {showEdit?\n                <span>\n                <input value={editedItem} onChange={(e)=>setEditedItem(e.target.value)}/>\n                <button onClick={()=>{props.editItem(props.index,editedItem);setShowEdit(!showEdit)}}>Save</button>\n                <button onClick={()=>setShowEdit(!showEdit)}>Cancel</button>\n                       \n                </span>\n                \n                :\n                <span>\n                <button onClick={()=>{setShowEdit(!showEdit);setEditedItem(props.item.task)}}>Edit</button>\n                <button onClick={()=>props.deleteItem(props.index)}>Delete</button>\n                </span>\n                 }\n                </div>\n                  \n        </>\n    )\n}\nexport default List;","import React, {useEffect, useState} from 'react'\nimport List from './components/List';\nconst APP=()=>{\n\nconst [item,setItem]=useState('');\nconst [itemList,setItemList]=useState([]);\nconst [inputBorder,setInputBorder]=useState('2px solid black');\n\nconst addItem=(e)=>{\n    e.preventDefault();\n    if(item.trim()!=='')\n    {\n        setInputBorder('2px solid black');\n        fetch(\"/addItem\",{\n            method:'POST',\n            body:JSON.stringify({task:item}),\n            headers:{\"Content-Type\":\"application/json\"}\n        }).then(r=>r.json()).then(res=>{const tempArr=[...itemList];tempArr.push(res);console.log(res);setItemList([...tempArr]);setItem('')});\n    }\n    else{\n        setInputBorder('2px solid red');\n    }\n}\nconst editItem=(index,newVal)=>{\n    const idToEdit=itemList[index]._id;\n    fetch(`/editItem/${idToEdit}`,\n        {\n            method:\"PUT\",\n            body:JSON.stringify({task:newVal}),\n            headers:{\n                'Content-Type':'application/json'\n            }\n        }).then(res=>{const data=[...itemList];\n            data[index].task=newVal;\n            setItemList(data)})\n\n}\nconst deleteItem=(index)=>{\n    \n    const data= [...itemList];\n    const idTodDelete=data[index]._id;\n\n    fetch(`/deleteItem/${idTodDelete}`,{\n    method:\"DELETE\"}).then(res=>{data.splice(index,1);setItemList([...data])})\n\n}\n\nuseEffect(()=>{\n\n    fetch('/getItems',{\n        method:'GET',\n        headers:{\n            \"Content-Type\":\"application/json\",\n            'Accept': 'application/json'\n        }\n    }).then(data=>data.json()).then((arr)=> {const sortedArr = arr.sort((a, b) => {\n        const aDateNumeric = new Date(a.creationTime).valueOf();\n        const bDateNumeric = new Date(b.creationTime).valueOf();\n        return aDateNumeric - bDateNumeric;\n    })\n    setItemList(sortedArr);\n});//data.map((element)=>(element.task))).then((task)=>setItemList(task)//const x=[...itemList];x.push(data.text);setItemList(x)})\n   \n},[])\n    return(\n        <div className=\"App\">\n            <main><h1>ToDo List</h1>\n        <form onSubmit={addItem}>\n        <input placeholder=\"Add task here\" value={item} onChange={(e)=>setItem(e.target.value)} style={{border:inputBorder}} onBlur={()=>setInputBorder('2px solid black')}/>\n        <button style={{marginBottom: '20px'}}>Add</button>\n        \n        {\n            itemList.map((item,index)=>\n          <List itemList={itemList} item={item} index={index} editItem={editItem} deleteItem={deleteItem}/>\n        )}\n        \n\n        </form>\n        </main>\n        <footer>Â© 2020 Developed by KG</footer>\n        </div>\n        \n    \n\n    )\n}\nexport default APP;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}